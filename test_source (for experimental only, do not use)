local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("cool hub script (test mode)", "DarkTheme")
local Tab = Window:NewTab("Tab")
local Section = Tab:NewSection("Experiments")
local TracerEnabled = false
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local Tracers = {}

local function CreateTracer(player)
    if player == LocalPlayer then return end 
    
    local line = Drawing.new("Line")
    line.Thickness = 2
    line.Transparency = 1
    line.Visible = false
    Tracers[player] = line
end

local function RemoveTracer(player)
    if Tracers[player] then
        Tracers[player]:Remove()
        Tracers[player] = nil
    end
end

local function UpdateTracers()
    if not TracerEnabled then return end
    
    for player, line in pairs(Tracers) do
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = player.Character.HumanoidRootPart
            local localRoot = LocalPlayer.Character.HumanoidRootPart
            local rootPos, onScreen = Camera:WorldToViewportPoint(rootPart.Position)
            
            if onScreen then
                local distance = (localRoot.Position - rootPart.Position).Magnitude
                local greenValue = math.clamp(255 - (distance * 2), 0, 255)
                line.Color = Color3.fromRGB(255, greenValue, 255)
                line.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y) -- Bottom center
                line.To = Vector2.new(rootPos.X, rootPos.Y)
                line.Visible = true
            else
                line.Visible = false
            end
        else
            line.Visible = false
        end
    end
end

local function ResetTracers()
    if TracerEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            CreateTracer(player)
        end
    end
end

LocalPlayer.CharacterAdded:Connect(function()
    task.wait(1) -- Small delay to ensure character is fully loaded
    ResetTracers()
end)

Players.PlayerAdded:Connect(CreateTracer)
Players.PlayerRemoving:Connect(RemoveTracer)

Section:NewToggle("Tracer", "Toggles tracers on/off", function(state)
    TracerEnabled = state
    if state then
        for _, player in pairs(Players:GetPlayers()) do
            CreateTracer(player)
        end
        RunService.RenderStepped:Connect(UpdateTracers)
    else
        for _, line in pairs(Tracers) do
            line:Remove()
        end
        Tracers = {}
    end
end)
